stages:
  - Sonar

# Sonar scanner, scan and analyse source code using SonarQ
sonar_analysis:
  stage: Sonar
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - if: $CI_COMMIT_BRANCH == "develop"
      when: manual
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
    - when: never
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - echo Linting Source Code Phase
    - apk add --update nodejs npm
    - npm install -g npm@latest
    - npm install typescript --force
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.sources=. -Dsonar.host.url=https://sonar1.fsoft.com.vn -Dsonar.login=$SONAR_TOKEN
  allow_failure: true # Allow fail only because this is external jobs, should not block build jobs
  tags:
    - gdp-docker
